<!DOCTYPE html>
<html>

<% include ./partials/header %>

	<body>
		<% include ./partials/navbar %>
			<% include ./partials/scripts %>

				<div id="Windows" class="GameContainer">
					<canvas id="WindowsGameSpace" width="1500px" height="750px"></canvas>
				</div>
				<p><span id="ScreenX"></span>&nbsp&nbsp<span id="ScreenY"></span>&nbsp&nbsp&nbsp&nbspPlayer Count: <span
						id="PlayerCount"></span></p>
				<p><span id="xLocation"></span>&nbsp&nbsp<span id="yLocation"></span>&nbsp&nbsp&nbsp&nbsp<span
						id="Direction"></span> <span id="Line"></span></p>
				<p id="Bugs"></p>

				<script>

					let time = 0;
					let game = document.getElementById("WindowsGameSpace").getContext("2d");
					let PlayerList = [];
					let ThroughTestPlayers = true;
					let ThroughTestData = true;
					let WallCheck = [0, 1, 2, 3, 4, 5, 6];
					let Delay = 16.67;
					let TimerCheckUp = null;
					let TimerCheckDown = null;
					let TimerCheckLeft = null;
					let TimerCheckRight = null;
					let Terrain = "";
					let GameState = "active";
					let FocusedBug = 0;
					let LinePosition = 0;
					let LineVelocity = 0;
					let Easy = 5;
					let Medium = 10;
					let Hard = 15;
					let Tough = 25;
					let Extreme = 30;
					let LineDirection = "";

					let BugXLocations = [
						445, 785, 440, 735, 55, 80, 65, 560, 350, 530, 160, 595, 760, 970, 260, 195, 450, 775, 1210, 340, 900, 1080, 315, 335, 750, 915, 660,
						215, 525, 400, 780, 740, 115, 165, 1040, 1400, 205, 715, 605, 555, 485, 345, 335, 425, 385, 765, 500, 775, 775
					];

					let BugDifficulty = [
						5, 3, 4, 1, 2, 4, 5, 3, 1, 2, 3, 1, 2, 2, 4, 3, 1, 1, 2, 1, 4, 4, 4, 1, 1, 
						2, 3, 4, 3, 1, 3, 1, 3, 1, 4, 4, 2, 3, 1, 1, 4, 1, 5, 4, 2, 4, 1, 3, 5
					];

					let BugYLocations = [
						380, 145, 365, 250, 525, 470, 525, 250, 30, 95, 550, 35, 350, 505, 475, 195, 605, 70, 50, 450, 260, 215, 505, 150, 35, 260, 140, 600,
						310, 430, 270, 400, 200, 480, 265, 120, 355, 280, 425, 330, 290, 535, 120, 395, 325, 160, 560, 100, 385
					];

					let BugXScreens = [
						0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
						4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6
					];

					let BugYScreens = [
						0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4,
						5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6
					];

					let BugFileNames = [
						"Millipede", "Ladybug", "Hummingbird", "Beetle", "TropicalFish", "Stingray", "AnglerFish", "Mantis", "SongBird",
						"StinkBug", "FlowerMantisRed", "Fly", "Lobster", "Cockroach", "Wasp", "Spider", "Ants", "FlowerMantisWhite",
						"Lizard", "Crawdad", "HermitCrab", "JumpingSpider", "BronzeMantis", "Caterpillar", "Butterfly", "Mosquito",
						"Newt", "Skink", "Bee", "WalkingStick", "Skater", "Termite", "Frog", "Amoeba", "Salamander", "Scorpion",
						"Antlion", "Mudskipper", "Turtle", "Slug", "Firefly", "Snail", "SacredScarabBeetle", "ScarabBeetle",
						"FlowerMantisYellow", "LightningBug", "Worm", "Moth", "Dragonfly"
					];

					let BugNames = [
						"Millipede", "Ladybug", "Hummingbird", "Beetle", "Tropical Fish", "Stingray", "Angler Fish", "Mantis", "Song Bird",
						"Stink Bug", "Red Mantis", "Fly", "Lobster", "Cockroach", "Wasp", "Spider", "Ants", "White Mantis", "Lizard",
						"Crawdad", "Hermit Crab", "Jumping Spider", "Leaf Mantis", "Caterpillar", "Butterfly", "Mosquito", "Newt",
						"Skink", "Queen Bee", "Walking Stick", "Water Strider", "Termite", "Frog", "Amoeba", "Salamander", "Scorpion",
						"Antlion", "Mudskipper", "Turtle", "Slug", "Firefly", "Snail", "Sacred Scarab Beetle", "Scarab Beetle",
						"Yellow Mantis", "Lightning Bug", "Worm", "Moth", "Dragonfly"
					];

					let BugsCaught = [
						<%= locals.user.player.Bug.Millipede %>, <%= locals.user.player.Bug.Ladybug %>,	<%= locals.user.player.Bug.Hummingbird %>, 
						<%= locals.user.player.Bug.Beetle %>, <%= locals.user.player.Bug.TropicalFish %>, <%= locals.user.player.Bug.Stingray %>,
						<%= locals.user.player.Bug.Anglerfish %>, <%= locals.user.player.Bug.Mantis %>, <%= locals.user.player.Bug.Songbird %>,
						<%= locals.user.player.Bug.StinkBug %>, <%= locals.user.player.Bug.FlowerMantisRed %>, <%= locals.user.player.Bug.Fly %>,
						<%= locals.user.player.Bug.Lobster %>, <%= locals.user.player.Bug.Cockroach %>, <%= locals.user.player.Bug.Wasp %>,
						<%= locals.user.player.Bug.Spider %>, <%= locals.user.player.Bug.Ants %>, <%= locals.user.player.Bug.FlowerMantisWhite %>,
						<%= locals.user.player.Bug.Lizard %>, <%= locals.user.player.Bug.Crawdad %>, <%= locals.user.player.Bug.HermitCrab %>,
						<%= locals.user.player.Bug.JumpingSpider %>, <%= locals.user.player.Bug.BronzeMantis %>, <%= locals.user.player.Bug.Caterpillar %>,
						<%= locals.user.player.Bug.Butterfly %>, <%= locals.user.player.Bug.Mosquito %>, <%= locals.user.player.Bug.Newt %>,
						<%= locals.user.player.Bug.Skink %>, <%= locals.user.player.Bug.Bee %>, <%= locals.user.player.Bug.Walkingstick %>,
						<%= locals.user.player.Bug.Skater %>, <%= locals.user.player.Bug.Termite %>, <%= locals.user.player.Bug.Frog %>,
						<%= locals.user.player.Bug.Amoeba %>, <%= locals.user.player.Bug.Salamander %>, <%= locals.user.player.Bug.Scorpion %>,
						<%= locals.user.player.Bug.Antlion %>, <%= locals.user.player.Bug.Mudskip %>, <%= locals.user.player.Bug.Turtle %>,
						<%= locals.user.player.Bug.Slug %>, <%= locals.user.player.Bug.Firefly %>, <%= locals.user.player.Bug.Snail %>,
						<%= locals.user.player.Bug.SacredScarabBeetle %>, <%= locals.user.player.Bug.ScarabBeetle %>,
						<%= locals.user.player.Bug.FlowerMantisYellow %>, <%= locals.user.player.Bug.LightningBug %>,
						<%= locals.user.player.Bug.Worm %>, <%= locals.user.player.Bug.Moth %>, <%= locals.user.player.Bug.Dragonfly %>
					]

					let Player = {
						id: "<%= locals.user._id %>",
						Name: "<%= locals.user.username %>",
						xLocation: <%= locals.user.player.xLocation %>,
						yLocation: <%= locals.user.player.yLocation %>,
						xScreen: <%= locals.user.player.xScreen %>,
						yScreen: <%= locals.user.player.yScreen %>,
						Speed: <%= locals.user.player.Speed %>,
						Direction: "<%= locals.user.player.Direction %>",
						Movement: {
							Upward: <%= locals.user.player.Movement.Upward %>,
							Downward: <%= locals.user.player.Movement.Downward %>,
							Left: <%= locals.user.player.Movement.Left %>,
							Right: <%= locals.user.player.Movement.Right %>,
						},
						Bug: {
							Millipede: <%= locals.user.player.Bug.Millipede %>,
							Ladybug: <%= locals.user.player.Bug.Ladybug %>,
							Hummingbird: <%= locals.user.player.Bug.Hummingbird %>,
							Beetle: <%= locals.user.player.Bug.Beetle %>,
							TropicalFish: <%= locals.user.player.Bug.TropicalFish %>,
							Stingray: <%= locals.user.player.Bug.Stingray %>,
							Anglerfish: <%= locals.user.player.Bug.Anglerfish %>,
							Mantis: <%= locals.user.player.Bug.Mantis %>,
							Songbird: <%= locals.user.player.Bug.Songbird %>,
							StinkBug: <%= locals.user.player.Bug.StinkBug %>,
							FlowerMantisRed: <%= locals.user.player.Bug.FlowerMantisRed %>,
							Fly: <%= locals.user.player.Bug.Fly %>,
							Lobster: <%= locals.user.player.Bug.Lobster %>,
							Cockroach: <%= locals.user.player.Bug.Cockroach %>,
							Wasp: <%= locals.user.player.Bug.Wasp %>,
							Spider: <%= locals.user.player.Bug.Spider %>,
							Ants: <%= locals.user.player.Bug.Ants %>,
							FlowerMantisWhite: <%= locals.user.player.Bug.FlowerMantisWhite %>,
							Lizard: <%= locals.user.player.Bug.Lizard %>,
							Crawdad: <%= locals.user.player.Bug.Crawdad %>,
							HermitCrab: <%= locals.user.player.Bug.HermitCrab %>,
							JumpingSpider: <%= locals.user.player.Bug.JumpingSpider %>,
							BronzeMantis: <%= locals.user.player.Bug.BronzeMantis %>,
							Caterpillar: <%= locals.user.player.Bug.Caterpillar %>,
							Butterfly: <%= locals.user.player.Bug.Butterfly %>,
							Mosquito: <%= locals.user.player.Bug.Mosquito %>,
							Newt: <%= locals.user.player.Bug.Newt %>,
							Skink: <%= locals.user.player.Bug.Skink %>,
							Bee: <%= locals.user.player.Bug.Bee %>,
							Walkingstick: <%= locals.user.player.Bug.Walkingstick %>,
							Skater: <%= locals.user.player.Bug.Skater %>,
							Termite: <%= locals.user.player.Bug.Termite %>,
							Frog: <%= locals.user.player.Bug.Frog %>,
							Amoeba: <%= locals.user.player.Bug.Amoeba %>,
							Salamander: <%= locals.user.player.Bug.Salamander %>,
							Scorpion: <%= locals.user.player.Bug.Scorpion %>,
							Antlion: <%= locals.user.player.Bug.Antlion %>,
							Mudskip: <%= locals.user.player.Bug.Mudskip %>,
							Turtle: <%= locals.user.player.Bug.Turtle %>,
							Slug: <%= locals.user.player.Bug.Slug %>,
							Firefly: <%= locals.user.player.Bug.Firefly %>,
							Snail: <%= locals.user.player.Bug.Snail %>,
							SacredScarabBeetle: <%= locals.user.player.Bug.SacredScarabBeetle %>,
							ScarabBeetle: <%= locals.user.player.Bug.ScarabBeetle %>,
							FlowerMantisYellow: <%= locals.user.player.Bug.FlowerMantisYellow %>,
							LightningBug: <%= locals.user.player.Bug.LightningBug %>,
							Worm: <%= locals.user.player.Bug.Worm %>,
							Moth: <%= locals.user.player.Bug.Moth %>,
							Dragonfly: <%= locals.user.player.Bug.Dragonfly %>
						}
					}

					setInterval(FindPlayers, 20);
					setInterval(UploadPlayer, 20);

					window.requestAnimationFrame(GameFrame);

					function GameFrame() {
						if (GameState == "active") {
							MovementCheck();
							LoadPlayer();
							LoadPlayers();
							SummonBugs();
						} else if (GameState == "catching") {
							BugCatching(FocusedBug);
						}

						document.getElementById("ScreenX").innerHTML = Player.xScreen;
						document.getElementById("ScreenY").innerHTML = Player.yScreen;

						document.getElementById("xLocation").innerHTML = Player.xLocation;
						document.getElementById("yLocation").innerHTML = Player.yLocation;

						document.getElementById("Line").innerHTML = LinePosition;
						//document.getElementById("Direction").innerHTML = Player.Direction;
						window.requestAnimationFrame(GameFrame);
					}

					function LoadPlayers() {
						document.getElementById("PlayerCount").innerHTML = PlayerList.length;
						for (let i = 0; i < PlayerList.length; i++) {
							MultiplayerAvatar = new Image();
							MultiplayerAvatar.onload = function () {
								game.drawImage(MultiplayerAvatar, PlayerList[i].xLocation - (52 / 2), PlayerList[i].yLocation - (75 / 2), 52, 75);
								game.font = '12px Arial';
								game.fillStyle = "black";
								let textlength = game.measureText(PlayerList[i].Name);
								game.fillText(PlayerList[i].Name, PlayerList[i].xLocation - (textlength.width / 2) - 9, PlayerList[i].yLocation - (75 / 2));
							}
							MultiplayerAvatar.src = "/images/Player/Player.png";
						}
					}

					function LoadPlayer() {
						PlayerAvatar = new Image();
						PlayerAvatar.onload = function () {
							Clear();
							//SummonBugs();
							game.drawImage(PlayerAvatar, Player.xLocation - (52 / 2), Player.yLocation - (75 / 2), 52, 75);
							game.font = '12px Arial';
							game.fillStyle = "black";
							let textlength = game.measureText(Player.Name);
							game.fillText(Player.Name, Player.xLocation - (textlength.width / 2) - 9, Player.yLocation - (75 / 2));
						}

						if (Player.Direction == "Right") {
							PlayerAvatar.src = "/images/Player/Player.png";
						} else if (Player.Direction == "Left") {
							PlayerAvatar.src = "/images/Player/PlayerLeft.png";
						}
					}

					function Clear() {
						MapScreen = new Image();
						if (Player.xScreen == 0 && Player.yScreen == 0) {
							MapScreen.src = "/images/Map/X0Y0.png";
						} else if (Player.xScreen == 0 && Player.yScreen == 1) {
							MapScreen.src = "/images/Map/X0Y1.png";
						} else if (Player.xScreen == 0 && Player.yScreen == 2) {
							MapScreen.src = "/images/Map/X0Y2.png";
						} else if (Player.xScreen == 0 && Player.yScreen == 3) {
							MapScreen.src = "/images/Map/X0Y3.png";
						} else if (Player.xScreen == 0 && Player.yScreen == 4) {
							MapScreen.src = "/images/Map/X0Y4.png";
						} else if (Player.xScreen == 0 && Player.yScreen == 5) {
							MapScreen.src = "/images/Map/X0Y5.png";
						} else if (Player.xScreen == 0 && Player.yScreen == 6) {
							MapScreen.src = "/images/Map/X0Y6.png";
						} else if (Player.xScreen == 1 && Player.yScreen == 0) {
							MapScreen.src = "/images/Map/X1Y0.png";
						} else if (Player.xScreen == 1 && Player.yScreen == 1) {
							MapScreen.src = "/images/Map/X1Y1.png";
						} else if (Player.xScreen == 1 && Player.yScreen == 2) {
							MapScreen.src = "/images/Map/X1Y2.png";
						} else if (Player.xScreen == 1 && Player.yScreen == 3) {
							MapScreen.src = "/images/Map/X1Y3.png";
						} else if (Player.xScreen == 1 && Player.yScreen == 4) {
							MapScreen.src = "/images/Map/X1Y4.png";
						} else if (Player.xScreen == 1 && Player.yScreen == 5) {
							MapScreen.src = "/images/Map/X1Y5.png";
						} else if (Player.xScreen == 1 && Player.yScreen == 6) {
							MapScreen.src = "/images/Map/X1Y6.png";
						} else if (Player.xScreen == 2 && Player.yScreen == 0) {
							MapScreen.src = "/images/Map/X2Y0.png";
						} else if (Player.xScreen == 2 && Player.yScreen == 1) {
							MapScreen.src = "/images/Map/X2Y1.png";
						} else if (Player.xScreen == 2 && Player.yScreen == 2) {
							MapScreen.src = "/images/Map/X2Y2.png";
						} else if (Player.xScreen == 2 && Player.yScreen == 3) {
							MapScreen.src = "/images/Map/X2Y3.png";
						} else if (Player.xScreen == 2 && Player.yScreen == 4) {
							MapScreen.src = "/images/Map/X2Y4.png";
						} else if (Player.xScreen == 2 && Player.yScreen == 5) {
							MapScreen.src = "/images/Map/X2Y5.png";
						} else if (Player.xScreen == 2 && Player.yScreen == 6) {
							MapScreen.src = "/images/Map/X2Y6.png";
						} else if (Player.xScreen == 3 && Player.yScreen == 0) {
							MapScreen.src = "/images/Map/X3Y0.png";
						} else if (Player.xScreen == 3 && Player.yScreen == 1) {
							MapScreen.src = "/images/Map/X3Y1.png";
						} else if (Player.xScreen == 3 && Player.yScreen == 2) {
							MapScreen.src = "/images/Map/X3Y2.png";
						} else if (Player.xScreen == 3 && Player.yScreen == 3) {
							MapScreen.src = "/images/Map/X3Y3.png";
						} else if (Player.xScreen == 3 && Player.yScreen == 4) {
							MapScreen.src = "/images/Map/X3Y4.png";
						} else if (Player.xScreen == 3 && Player.yScreen == 5) {
							MapScreen.src = "/images/Map/X3Y5.png";
						} else if (Player.xScreen == 3 && Player.yScreen == 6) {
							MapScreen.src = "/images/Map/X3Y6.png";
						} else if (Player.xScreen == 4 && Player.yScreen == 0) {
							MapScreen.src = "/images/Map/X4Y0.png";
						} else if (Player.xScreen == 4 && Player.yScreen == 1) {
							MapScreen.src = "/images/Map/X4Y1.png";
						} else if (Player.xScreen == 4 && Player.yScreen == 2) {
							MapScreen.src = "/images/Map/X4Y2.png";
						} else if (Player.xScreen == 4 && Player.yScreen == 3) {
							MapScreen.src = "/images/Map/X4Y3.png";
						} else if (Player.xScreen == 4 && Player.yScreen == 4) {
							MapScreen.src = "/images/Map/X4Y4.png";
						} else if (Player.xScreen == 4 && Player.yScreen == 5) {
							MapScreen.src = "/images/Map/X4Y5.png";
						} else if (Player.xScreen == 4 && Player.yScreen == 6) {
							MapScreen.src = "/images/Map/X4Y6.png";
						} else if (Player.xScreen == 5 && Player.yScreen == 0) {
							MapScreen.src = "/images/Map/X5Y0.png";
						} else if (Player.xScreen == 5 && Player.yScreen == 1) {
							MapScreen.src = "/images/Map/X5Y1.png";
						} else if (Player.xScreen == 5 && Player.yScreen == 2) {
							MapScreen.src = "/images/Map/X5Y2.png";
						} else if (Player.xScreen == 5 && Player.yScreen == 3) {
							MapScreen.src = "/images/Map/X5Y3.png";
						} else if (Player.xScreen == 5 && Player.yScreen == 4) {
							MapScreen.src = "/images/Map/X5Y4.png";
						} else if (Player.xScreen == 5 && Player.yScreen == 5) {
							MapScreen.src = "/images/Map/X5Y5.png";
						} else if (Player.xScreen == 5 && Player.yScreen == 6) {
							MapScreen.src = "/images/Map/X5Y6.png";
						} else if (Player.xScreen == 6 && Player.yScreen == 0) {
							MapScreen.src = "/images/Map/X6Y0.png";
						} else if (Player.xScreen == 6 && Player.yScreen == 1) {
							MapScreen.src = "/images/Map/X6Y1.png";
						} else if (Player.xScreen == 6 && Player.yScreen == 2) {
							MapScreen.src = "/images/Map/X6Y2.png";
						} else if (Player.xScreen == 6 && Player.yScreen == 3) {
							MapScreen.src = "/images/Map/X6Y3.png";
						} else if (Player.xScreen == 6 && Player.yScreen == 4) {
							MapScreen.src = "/images/Map/X6Y4.png";
						} else if (Player.xScreen == 6 && Player.yScreen == 5) {
							MapScreen.src = "/images/Map/X6Y5.png";
						} else if (Player.xScreen == 6 && Player.yScreen == 6) {
							MapScreen.src = "/images/Map/X6Y6.png";
						} else {
							//game.beginPath();
							//game.fillStyle = "green";
							//game.fillRect(0, 0, 1500, 750);
						}
						game.drawImage(MapScreen, 0, 0, 1500, 750);
					}

					function FindPlayers() {
						if (ThroughTestPlayers == true) {
							ThroughTestPlayers = false;
							$.get("game/renderPlayers", { Name: Player.Name, xScreen: Player.xScreen, yScreen: Player.yScreen }, function (Players) {
								PlayerList = [];
								for (let i = 0; i < Players.length; i++) {
									let PlayerCharacter = new TempCharacter(
										Players[i].username,
										Players[i].player.xLocation,
										Players[i].player.yLocation,
										Players[i].player.Speed,
										Players[i].player.Direction
									);
									PlayerList.push(PlayerCharacter);
								}
								ThroughTestPlayers = true;
							});
						}
					}

					function TempCharacter(Name, xLocation, yLocation, Speed, Direction) {
						this.Name = Name;
						this.xLocation = xLocation;
						this.yLocation = yLocation;
						this.Speed = Speed;
						this.Direction = Direction;
					}

					function UploadPlayer() {
						if (ThroughTestData == true) {
							ThroughTestData = false;
							$.ajax({
								url: 'game/updatePlayer',
								type: 'PUT',
								data: {
									id: Player.id,
									Username: Player.Name,
									xScreen: Player.xScreen,
									yScreen: Player.yScreen,
									xLocation: Player.xLocation,
									yLocation: Player.yLocation,
									Speed: Player.Speed,
									Direction: Player.Direction,
									Movement: {
										Upward: Player.Movement.Upward,
										Downward: Player.Movement.Downward,
										Left: Player.Movement.Left,
										Right: Player.Movement.Right
									},
									Bug: {
										Dragonfly: Player.Bug.Dragonfly,
										Beetle: Player.Bug.Beetle,
										Snail: Player.Bug.Snail,
										Caterpillar: Player.Bug.Caterpillar,
										Skater: Player.Bug.Skater,
										Mosquito: Player.Bug.Mosquito,
										Antlion: Player.Bug.Antlion,
										Ants: Player.Bug.Ants,
										Bee: Player.Bug.Bee,
										Moth: Player.Bug.Moth,
										Butterfly: Player.Bug.Butterfly,
										Wasp: Player.Bug.Wasp,
										Spider: Player.Bug.Spider,
										Ladybug: Player.Bug.Ladybug,
										Walkingstick: Player.Bug.Walkingstick,
										ScarabBeetle: Player.Bug.ScarabBeetle,
										StinkBug: Player.Bug.StinkBug,
										Mantis: Player.Bug.Mantis,
										FlowerMantisRed: Player.Bug.FlowerMantisRed,
										FlowerMantisWhite: Player.Bug.FlowerMantisWhite,
										FlowerMantisYellow: Player.Bug.FlowerMantisYellow,
										Crawdad: Player.Bug.Crawdad,
										Termite: Player.Bug.Termite,
										Cockroach: Player.Bug.Cockroach,
										Worm: Player.Bug.Worm,
										Skink: Player.Bug.Skink,
										Newt: Player.Bug.Newt,
										Frog: Player.Bug.Frog,
										Salamander: Player.Bug.Salamander,
										Turtle: Player.Bug.Turtle,
										Hummingbird: Player.Bug.Hummingbird,
										Songbird: Player.Bug.Songbird,
										TropicalFish: Player.Bug.TropicalFish,
										Scorpion: Player.Bug.Scorpion,
										SacredScarabBeetle: Player.Bug.SacredScarabBeetle,
										Amoeba: Player.Bug.Amoeba,
										LightningBug: Player.Bug.LightningBug,
										Firefly: Player.Bug.Firefly,
										Slug: Player.Bug.Slug,
										JumpingSpider: Player.Bug.JumpingSpider,
										BronzeMantis: Player.Bug.BronzeMantis,
										Fly: Player.Bug.Fly,
										HermitCrab: Player.Bug.HermitCrab,
										Mudskip: Player.Bug.Mudskip,
										Lobster: Player.Bug.Lobster,
										Lizard: Player.Bug.Lizard,
										Anglerfish: Player.Bug.Anglerfish,
										Stingray: Player.Bug.Stingray,
										Millipede: Player.Bug.Millipede
									}
								},
								success: function (result) {
									ThroughTestData = true;
								},
								complete: function (result) {
									ThroughTestData = true;
								}
							});
						}
					}

					SummonBugs();

					function SummonBugs() {
						for (let i = 0; i < 49; i++) {
							if (Player.xScreen == BugXScreens[i] && Player.yScreen == BugYScreens[i] && !BugsCaught[i]) {
								Bug = new Image();
								Bug.onload = function () {
									game.drawImage(Bug, BugXLocations[i], BugYLocations[i], 50, 50);
									game.font = '12px Arial';
									game.fillStyle = "white";

									game.fillText(BugNames[i], BugXLocations[i], BugYLocations[i] - 5);

								}

								Bug.src = "/images/Bugs/" + BugFileNames[i] + ".png";
								document.getElementById("Direction").innerHTML = BugXScreens[i] + " : " + BugYScreens[i] + " : " + BugXLocations[i] + " : " + BugYLocations[i] + " : " + BugNames[i] + " : " + BugFileNames[i] + " : " + BugsCaught[i] + " : " + (BugXLocations[i] - 15) + " : " + (BugYLocations[i] - 15) + " : " + (BugXLocations[i] + 65) + " : " + (BugYLocations[i] + 65) + " : " + i;
								break;
							}
						}
					}

					function CheckForBugs() {
						for (let i = 0; i < 49; i++) {
							if (Player.xScreen == BugXScreens[i] && Player.yScreen == BugYScreens[i] && !BugsCaught[i] &&
								Player.xLocation >= (BugXLocations[i] - 15) && Player.yLocation >= (BugYLocations[i] - 30) &&
								Player.xLocation <= (BugXLocations[i] + 65) && Player.yLocation <= (BugYLocations[i] + 70)
							) {
								GameState = "catching";
								FocusedBug = i;
								LinePosition = 400;
								break;
							}
						}
					}

					function SyncBugs() {
						let p = 0;
						for (const key in Player.Bug) {
							Player.Bug[key] = BugsCaught[p];
							p++;
						}
					}

					function BugCatching(Bug) {
						BugImage = new Image();
						BugImage.onload = function () {
							LinePosition += LineVelocity;
							game.fillStyle = "black";
							game.fillRect(295, 195, 910, 360);
							game.fillStyle = "white";
							game.fillRect(300, 200, 900, 350);
							game.fillStyle = "#d9e7fc";
							game.lineWidth = 5;
							game.beginPath();
							game.ellipse(750, 475, 50, 350, 1.57, 0, 2 * Math.PI);
							game.fill();
							game.fillStyle = "#1c65d4";
							game.lineWidth = 5;
							game.beginPath();
							game.ellipse(750, 475, 50, 25, 1.57, 0, 2 * Math.PI);
							game.fill();
							game.strokeStyle = "black";
							game.lineWidth = 5;
							game.beginPath();
							game.ellipse(750, 475, 50, 350, 1.57, 0, 2 * Math.PI);
							game.ellipse(750, 475, 50, 25, 1.57, 0, 2 * Math.PI);
							game.stroke();
							game.drawImage(BugImage, 700, 300, 100, 100);
							game.font = "50px Arial";
							game.fillStyle = "black";
							game.textAlign = "center";
							game.fillText(BugNames[Bug], 750, 275);

						}
						game.beginPath();
						game.strokeStyle = "black";
						game.lineWidth = 5;
						game.moveTo(LinePosition, 405);
						game.lineTo(LinePosition, 545);
						game.stroke();
						if (LinePosition >= 1100) {
							if (BugDifficulty[FocusedBug] == 1) {
								LineVelocity = -Easy;
							} else if (BugDifficulty[FocusedBug] == 2) {
								LineVelocity = -Medium;
							} else if (BugDifficulty[FocusedBug] == 3) {
								LineVelocity = -Hard;
							} else if (BugDifficulty[FocusedBug] == 4) {
								LineVelocity = -Tough;
							} else if (BugDifficulty[FocusedBug] == 5) {
								LineVelocity = -Extreme;
							}

						} else if (LinePosition <= 400) {
							if (BugDifficulty[FocusedBug] == 1) {
								LineVelocity = Easy;
							} else if (BugDifficulty[FocusedBug] == 2) {
								LineVelocity = Medium;
							} else if (BugDifficulty[FocusedBug] == 3) {
								LineVelocity = Hard;
							} else if (BugDifficulty[FocusedBug] == 4) {
								LineVelocity = Tough;
							} else if (BugDifficulty[FocusedBug] == 5) {
								LineVelocity = Extreme;
							}
						}

						BugImage.src = "/images/Bugs/" + BugFileNames[Bug] + ".png";
					}

					function TerrainCheck() {

					}

					function Use() {
						CheckForBugs();
					}

					function MovementCheck() {
						if (Player.yLocation <= 55 && WallCheck.indexOf(Player.xScreen) != -1 && Player.yScreen == 0) {
							Player.Movement.Upward = false;
						} else {
							Player.Movement.Upward = true;
						}

						if (
							(Player.yLocation >= 685 && WallCheck.indexOf(Player.xScreen) != -1 && Player.yScreen == 6) ||
							(Player.yLocation >= 600 && ((Player.xScreen == 3 && Player.xLocation >= 1290) || Player.xScreen == 4 || Player.xScreen == 5) && Player.yScreen == 4) ||
							(Player.yLocation >= 600 && (Player.xLocation <= 1030 || Player.xLocation >= 1330) && Player.xScreen == 6 && Player.yScreen == 4) ||
							(Player.yLocation >= 630 && (Player.xScreen == 6 || (Player.xScreen == 5 && Player.xLocation >= 1180)) && Player.yScreen == 5) ||
							(Player.yLocation >= 610 && (Player.xScreen == 4 || (Player.xScreen == 5 && Player.xLocation <= 395)) && Player.yScreen == 5) ||
							(Player.yLocation >= 630 && Player.xLocation >= 1285 && Player.xScreen == 3 && Player.yScreen == 6) ||
							(Player.yLocation >= 620 && Player.yScreen == 6 && (Player.xScreen == 4 || Player.xScreen == 5)) ||
							(Player.yLocation >= 650 && Player.yScreen == 6 && Player.xScreen == 6)
						) {
							Player.Movement.Downward = false;
						} else {
							Player.Movement.Downward = true;
						}

						if (Player.xLocation <= 55 && WallCheck.indexOf(Player.yScreen) != -1 && Player.xScreen == 0) {
							Player.Movement.Left = false;
						} else {
							Player.Movement.Left = true;
						}

						if (Player.xLocation >= 1450 && WallCheck.indexOf(Player.yScreen) != -1 && Player.xScreen == 6) {
							Player.Movement.Right = false;
						} else {
							Player.Movement.Right = true;
						}
					}

					function Move(Direction) {
						switch (Direction) {
							case 1:
								if (Player.Movement.Upward == true) {
									Player.yLocation -= Player.Speed;
								}
								break;
							case 2:
								if (Player.Movement.Downward == true) {
									Player.yLocation += Player.Speed;
								}
								break;
							case 3:
								if (Player.Movement.Left == true) {
									Player.xLocation -= Player.Speed;
								}
								Player.Direction = "Left";
								break;
							case 4:
								if (Player.Movement.Right == true) {
									Player.xLocation += Player.Speed;
								}
								Player.Direction = "Right";
						}

						if (Player.xLocation > 1500 || (Player.xLocation > 1355 && Player.xScreen == 3 && Player.yScreen == 6)) {
							Player.xLocation = 0;
							Player.xScreen += 1;
						}
						if (Player.xLocation < 0) {
							if (Player.xScreen == 4 && Player.yScreen == 6) {
								Player.xLocation = 1260;
							} else {
								Player.xLocation = 1500;
							}
							Player.xScreen -= 1;
						}
						if (Player.yLocation > 750) {
							Player.yLocation = 0;
							Player.yScreen += 1;
						}
						if (Player.yLocation < 0) {
							Player.yLocation = 750;
							Player.yScreen -= 1;
						}
					}

					$("body").keydown(function (Key) {
						if (GameState == "active") {
							if (Key.which == 38) {
								if (TimerCheckUp == null) {
									TimerCheckUp = setInterval(Move, Delay, 1);
								}
							} else if (Key.which == 40) {
								if (TimerCheckDown == null) {
									TimerCheckDown = setInterval(Move, Delay, 2);
								}
							} else if (Key.which == 37) {
								if (TimerCheckLeft == null) {
									TimerCheckLeft = setInterval(Move, Delay, 3);
								}
							} else if (Key.which == 39) {
								if (TimerCheckRight == null) {
									TimerCheckRight = setInterval(Move, Delay, 4);
								}
							} else if (Key.which == 90) {
								Use();
							}
						} else if (GameState == "catching") {
							if (Key.which == 90) {
								let DifficultyCoefficient = 0;
								if (BugDifficulty[FocusedBug] == 1) {
									DifficultyCoefficient = Easy;
								} else if (BugDifficulty[FocusedBug] == 1) {
									DifficultyCoefficient = Medium;
								} else if (BugDifficulty[FocusedBug] == 1) {
									DifficultyCoefficient = Hard;
								} else if (BugDifficulty[FocusedBug] == 1) {
									DifficultyCoefficient = Tough;
								} else if (BugDifficulty[FocusedBug] == 1) {
									DifficultyCoefficient = Extreme;
								}
								
								if (LinePosition >= 720 && LinePosition <= 780) {
									BugsCaught[FocusedBug] = true;
								} else {

								}
								GameState = "active";
								SyncBugs();
							}
						}
					});

					$("body").keyup(function (Key) {
						if (GameState == "active") {
							if (Key.which == 38) {
								clearInterval(TimerCheckUp);
								TimerCheckUp = null;
							} else if (Key.which == 40) {
								clearInterval(TimerCheckDown);
								TimerCheckDown = null;
							} else if (Key.which == 37) {
								clearInterval(TimerCheckLeft);
								TimerCheckLeft = null;
							} else if (Key.which == 39) {
								clearInterval(TimerCheckRight);
								TimerCheckRight = null;
							} else if (Key.which == 90) {
								//Use();
							}
						}
					});

				</script>

	</body>

</html>